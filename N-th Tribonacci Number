class Solution {
public:
    int fib(int n, int arr[]) {
        if (n == 0) {
            arr[n] = 0;
            return arr[n];
        } else if (n == 1 || n == 2) {
            arr[n] = 1;
            return arr[n];
        } else {
            if (arr[n - 1] != -1 and arr[n - 2] != -1 and arr[n - 3] != -1)
                arr[n] = arr[n - 1] + arr[n - 2] + arr[n - 3];
            else if (arr[n - 1] != -1 and arr[n - 2] != -2)
                arr[n] = arr[n - 1] + arr[n - 2] + fib(n - 3, arr);
            else if (arr[n - 1] != -1)
                arr[n] = arr[n - 1] + fib(n - 2, arr) + fib(n - 3, arr);
            else
                arr[n] = fib(n - 1, arr) + fib(n - 2, arr) + fib(n - 3, arr);

            return arr[n];
        }
    }
    int tribonacci(int n) {
        int arr[n + 3];
        for (int i = 0; i <= n; i++)
            arr[i] = -1;
        int res = fib(n, arr);
        return res;
    }
};
